[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJoy[m[Kâ€™ in namespace â€˜[01m[Ksensor_msgs[m[Kâ€™ does not name a type
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K                                      ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:51:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K&[m[Kâ€™ token
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K                                                   ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:51:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K&[m[Kâ€™ token
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K                                           ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:53:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[Kjoy[m[Kâ€™ with no type [-fpermissive]
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K                                                     ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:53:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:56:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K)[m[Kâ€™ token
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K                                                        ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:[m[K In constructor â€˜[01m[Kcoll_avoid::coll_avoid()[m[Kâ€™:
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:20:1:[m[K [01;31m[Kerror: [m[Kuninitialized reference member in â€˜[01m[Kint&[m[Kâ€™ [-fpermissive]
 coll_avoid::coll_avoid() {
[01;32m[K ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:53:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kint& coll_avoid::joy[m[Kâ€™ should be initialized
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K                                                     ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:21:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktreshhold[m[Kâ€™ was not declared in this scope
  nh_.param("treshhold", treshhold, treshhold);
[01;32m[K                         ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:24:26:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kgeometry_msgs[m[Kâ€™ was not declared in this scope
  vel_pub = nh_.advertise<geometry_msgs::Twist>("/vrep/twistCommand", 1);
[01;32m[K                          ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:24:16:[m[K [01;31m[Kerror: [m[Kparse error in template argument list
  vel_pub = nh_.advertise<geometry_msgs::Twist>("/vrep/twistCommand", 1);
[01;32m[K                ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:24:71:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kros::NodeHandle::advertise(const char [19], int)[m[Kâ€™
  vel_pub = nh_.advertise<geometry_msgs::Twist>("/vrep/twistCommand", 1);
[01;32m[K                                                                       ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:45:0[m[K,
                 from [01m[K/opt/ros/kinetic/include/pcl_ros/point_cloud.h:4[m[K,
                 from [01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:1[m[K:
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:248:15:[m[K [01;36m[Knote: [m[Kcandidate: template<class M> ros::Publisher ros::NodeHandle::advertise(const string&, uint32_t, bool)
     Publisher advertise(const std::string& topic, uint32_t queue_size, bool latch = false)
[01;32m[K               ^[m[K
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:248:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:24:71:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  vel_pub = nh_.advertise<geometry_msgs::Twist>("/vrep/twistCommand", 1);
[01;32m[K                                                                       ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:45:0[m[K,
                 from [01m[K/opt/ros/kinetic/include/pcl_ros/point_cloud.h:4[m[K,
                 from [01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:1[m[K:
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:314:13:[m[K [01;36m[Knote: [m[Kcandidate: template<class M> ros::Publisher ros::NodeHandle::advertise(const string&, uint32_t, const SubscriberStatusCallback&, const SubscriberStatusCallback&, const VoidConstPtr&, bool)
   Publisher advertise(const std::string& topic, uint32_t queue_size,
[01;32m[K             ^[m[K
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:314:13:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:24:71:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  vel_pub = nh_.advertise<geometry_msgs::Twist>("/vrep/twistCommand", 1);
[01;32m[K                                                                       ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:26:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJoy[m[Kâ€™ is not a member of â€˜[01m[Ksensor_msgs[m[Kâ€™
  speed_sub = nh_.subscribe<sensor_msgs::Joy>("treated_speed", 10, &TeleopTurtle::joyCallback, this);
[01;32m[K                            ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:26:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJoy[m[Kâ€™ is not a member of â€˜[01m[Ksensor_msgs[m[Kâ€™
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:26:68:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTeleopTurtle[m[Kâ€™ has not been declared
  speed_sub = nh_.subscribe<sensor_msgs::Joy>("treated_speed", 10, &TeleopTurtle::joyCallback, this);
[01;32m[K                                                                    ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:27:31:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJoy[m[Kâ€™ is not a member of â€˜[01m[Ksensor_msgs[m[Kâ€™
  distance_sub = nh_.subscribe<sensor_msgs::Joy>("vision_robot", 10, &TeleopTurtle::pc_callback, this);
[01;32m[K                               ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:27:31:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJoy[m[Kâ€™ is not a member of â€˜[01m[Ksensor_msgs[m[Kâ€™
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:27:70:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTeleopTurtle[m[Kâ€™ has not been declared
  distance_sub = nh_.subscribe<sensor_msgs::Joy>("vision_robot", 10, &TeleopTurtle::pc_callback, this);
[01;32m[K                                                                      ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:[m[K At global scope:
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:30:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTeleopTurtle[m[Kâ€™ has not been declared
 void TeleopTurtle::joyCallback(const sensor_msgs::Joy::ConstPtr& joy) {
[01;32m[K      ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:30:51:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJoy[m[Kâ€™ in namespace â€˜[01m[Ksensor_msgs[m[Kâ€™ does not name a type
 void TeleopTurtle::joyCallback(const sensor_msgs::Joy::ConstPtr& joy) {
[01;32m[K                                                   ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:30:64:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K&[m[Kâ€™ token
 void TeleopTurtle::joyCallback(const sensor_msgs::Joy::ConstPtr& joy) {
[01;32m[K                                                                ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:30:64:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K&[m[Kâ€™ token
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:30:66:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kjoy[m[Kâ€™
 void TeleopTurtle::joyCallback(const sensor_msgs::Joy::ConstPtr& joy) {
[01;32m[K                                                                  ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:38:6:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kvoid coll_avoid::pc_callback(sensor_msgs::PointCloud2ConstPtr)[m[Kâ€™ does not match any in class â€˜[01m[Kcoll_avoid[m[Kâ€™
 void coll_avoid::pc_callback(const sensor_msgs::PointCloud2ConstPtr msg) {
[01;32m[K      ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:10:7:[m[K [01;31m[Kerror: [m[Kcandidate is: void coll_avoid::pc_callback(...)
  void pc_callback(const sensor_msgs::Joy::ConstPtr& joy);
[01;32m[K       ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:47:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kargc[m[Kâ€™ was not declared in this scope
  ros::init(argc, argv, "joystick_teleop");
[01;32m[K            ^[m[K
[01m[K/home/romain/catkin_ws/src/collision_avoidance/src/coll_avoid.cpp:47:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kargv[m[Kâ€™ was not declared in this scope
  ros::init(argc, argv, "joystick_teleop");
[01;32m[K                  ^[m[K
make[2]: *** [CMakeFiles/collision_avoidance.dir/src/coll_avoid.cpp.o] Erreur 1
make[1]: *** [CMakeFiles/collision_avoidance.dir/all] Erreur 2
make: *** [all] Erreur 2
